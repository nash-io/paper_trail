searchData={"content_type":"text/markdown","items":[{"doc":"","ref":"Mix.Tasks.Papertrail.Install.html","title":"mix papertrail.install","type":"task"},{"doc":"","ref":"Mix.Tasks.Papertrail.Install.html#run/1","title":"Mix.Tasks.Papertrail.Install.run/1","type":"function"},{"doc":"","ref":"PaperTrail.html","title":"PaperTrail","type":"behaviour"},{"doc":"","ref":"PaperTrail.html#add_prefix/2","title":"PaperTrail.add_prefix/2","type":"function"},{"doc":"Deletes a record from the database with a related version insertion in one transaction","ref":"PaperTrail.html#delete/2","title":"PaperTrail.delete/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:delete/2","title":"PaperTrail.delete/2","type":"callback"},{"doc":"Same as delete/2 but returns only the model struct or raises if the changeset is invalid.","ref":"PaperTrail.html#delete!/2","title":"PaperTrail.delete!/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:delete!/2","title":"PaperTrail.delete!/2","type":"callback"},{"doc":"","ref":"PaperTrail.html#c:get_current_model/1","title":"PaperTrail.get_current_model/1","type":"callback"},{"doc":"","ref":"PaperTrail.html#get_current_model/2","title":"PaperTrail.get_current_model/2","type":"function"},{"doc":"","ref":"PaperTrail.html#get_item_type/1","title":"PaperTrail.get_item_type/1","type":"function"},{"doc":"","ref":"PaperTrail.html#get_model_id/1","title":"PaperTrail.get_model_id/1","type":"function"},{"doc":"","ref":"PaperTrail.html#get_sequence_from_model/2","title":"PaperTrail.get_sequence_from_model/2","type":"function"},{"doc":"","ref":"PaperTrail.html#get_sequence_id/2","title":"PaperTrail.get_sequence_id/2","type":"function"},{"doc":"","ref":"PaperTrail.html#get_version/1","title":"PaperTrail.get_version/1","type":"function"},{"doc":"","ref":"PaperTrail.html#c:get_version/1","title":"PaperTrail.get_version/1","type":"callback"},{"doc":"","ref":"PaperTrail.html#get_version/2","title":"PaperTrail.get_version/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:get_version/2","title":"PaperTrail.get_version/2","type":"callback"},{"doc":"","ref":"PaperTrail.html#get_version/3","title":"PaperTrail.get_version/3","type":"function"},{"doc":"","ref":"PaperTrail.html#c:get_version/3","title":"PaperTrail.get_version/3","type":"callback"},{"doc":"","ref":"PaperTrail.html#get_versions/1","title":"PaperTrail.get_versions/1","type":"function"},{"doc":"","ref":"PaperTrail.html#c:get_versions/1","title":"PaperTrail.get_versions/1","type":"callback"},{"doc":"","ref":"PaperTrail.html#get_versions/2","title":"PaperTrail.get_versions/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:get_versions/2","title":"PaperTrail.get_versions/2","type":"callback"},{"doc":"","ref":"PaperTrail.html#get_versions/3","title":"PaperTrail.get_versions/3","type":"function"},{"doc":"","ref":"PaperTrail.html#c:get_versions/3","title":"PaperTrail.get_versions/3","type":"callback"},{"doc":"Inserts a record to the database with a related version insertion in one transaction","ref":"PaperTrail.html#insert/2","title":"PaperTrail.insert/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:insert/2","title":"PaperTrail.insert/2","type":"callback"},{"doc":"Same as insert/2 but returns only the model struct or raises if the changeset is invalid.","ref":"PaperTrail.html#insert!/2","title":"PaperTrail.insert!/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:insert!/2","title":"PaperTrail.insert!/2","type":"callback"},{"doc":"","ref":"PaperTrail.html#make_version_struct/3","title":"PaperTrail.make_version_struct/3","type":"function"},{"doc":"","ref":"PaperTrail.html#serialize/2","title":"PaperTrail.serialize/2","type":"function"},{"doc":"Updates a record from the database with a related version insertion in one transaction","ref":"PaperTrail.html#update/2","title":"PaperTrail.update/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:update/2","title":"PaperTrail.update/2","type":"callback"},{"doc":"Same as update/2 but returns only the model struct or raises if the changeset is invalid.","ref":"PaperTrail.html#update!/2","title":"PaperTrail.update!/2","type":"function"},{"doc":"","ref":"PaperTrail.html#c:update!/2","title":"PaperTrail.update!/2","type":"callback"},{"doc":"Updates all records from the database with a related version insertion in one transaction","ref":"PaperTrail.html#update_all/3","title":"PaperTrail.update_all/3","type":"function"},{"doc":"","ref":"PaperTrail.html#c:update_all/3","title":"PaperTrail.update_all/3","type":"callback"},{"doc":"","ref":"PaperTrail.html#t:all_result/0","title":"PaperTrail.all_result/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:meta/0","title":"PaperTrail.meta/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:multi_name/0","title":"PaperTrail.multi_name/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:options/0","title":"PaperTrail.options/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:origin/0","title":"PaperTrail.origin/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:originator/0","title":"PaperTrail.originator/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:prefix/0","title":"PaperTrail.prefix/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:queryable/0","title":"PaperTrail.queryable/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:repo/0","title":"PaperTrail.repo/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:result/0","title":"PaperTrail.result/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:strict_mode/0","title":"PaperTrail.strict_mode/0","type":"type"},{"doc":"","ref":"PaperTrail.html#t:updates/0","title":"PaperTrail.updates/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html","title":"PaperTrail.Multi","type":"module"},{"doc":"","ref":"PaperTrail.Multi.html#add_prefix/2","title":"PaperTrail.Multi.add_prefix/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#append/2","title":"PaperTrail.Multi.append/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#commit/2","title":"PaperTrail.Multi.commit/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#delete/3","title":"PaperTrail.Multi.delete/3","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#error/3","title":"PaperTrail.Multi.error/3","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#get_item_type/1","title":"PaperTrail.Multi.get_item_type/1","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#get_model_id/1","title":"PaperTrail.Multi.get_model_id/1","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#get_sequence_from_model/2","title":"PaperTrail.Multi.get_sequence_from_model/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#get_sequence_id/2","title":"PaperTrail.Multi.get_sequence_id/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#insert/3","title":"PaperTrail.Multi.insert/3","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#make_version_struct/3","title":"PaperTrail.Multi.make_version_struct/3","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#make_version_structs/4","title":"PaperTrail.Multi.make_version_structs/4","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#merge/2","title":"PaperTrail.Multi.merge/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#merge/4","title":"PaperTrail.Multi.merge/4","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#new/0","title":"PaperTrail.Multi.new/0","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#prepend/2","title":"PaperTrail.Multi.prepend/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#run/3","title":"PaperTrail.Multi.run/3","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#run/5","title":"PaperTrail.Multi.run/5","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#serialize/2","title":"PaperTrail.Multi.serialize/2","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#to_list/1","title":"PaperTrail.Multi.to_list/1","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#update/3","title":"PaperTrail.Multi.update/3","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#update_all/4","title":"PaperTrail.Multi.update_all/4","type":"function"},{"doc":"","ref":"PaperTrail.Multi.html#t:changeset/0","title":"PaperTrail.Multi.changeset/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html#t:multi/0","title":"PaperTrail.Multi.multi/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html#t:options/0","title":"PaperTrail.Multi.options/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html#t:queryable/0","title":"PaperTrail.Multi.queryable/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html#t:result/0","title":"PaperTrail.Multi.result/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html#t:struct_or_changeset/0","title":"PaperTrail.Multi.struct_or_changeset/0","type":"type"},{"doc":"","ref":"PaperTrail.Multi.html#t:updates/0","title":"PaperTrail.Multi.updates/0","type":"type"},{"doc":"","ref":"PaperTrail.RepoClient.html","title":"PaperTrail.RepoClient","type":"module"},{"doc":"","ref":"PaperTrail.RepoClient.html#originator/0","title":"PaperTrail.RepoClient.originator/0","type":"function"},{"doc":"Gets the configured repo module or defaults to Repo if none configured","ref":"PaperTrail.RepoClient.html#repo/1","title":"PaperTrail.RepoClient.repo/1","type":"function"},{"doc":"","ref":"PaperTrail.RepoClient.html#return_operation/1","title":"PaperTrail.RepoClient.return_operation/1","type":"function"},{"doc":"","ref":"PaperTrail.RepoClient.html#strict_mode/1","title":"PaperTrail.RepoClient.strict_mode/1","type":"function"},{"doc":"","ref":"PaperTrail.Version.html","title":"PaperTrail.Version","type":"module"},{"doc":"","ref":"PaperTrail.Version.html#changeset/2","title":"PaperTrail.Version.changeset/2","type":"function"},{"doc":"Returns the count of all version records in the database","ref":"PaperTrail.Version.html#count/1","title":"PaperTrail.Version.count/1","type":"function"},{"doc":"Returns the first version record in the database by :inserted_at","ref":"PaperTrail.Version.html#first/1","title":"PaperTrail.Version.first/1","type":"function"},{"doc":"Returns the last version record in the database by :inserted_at","ref":"PaperTrail.Version.html#last/1","title":"PaperTrail.Version.last/1","type":"function"},{"doc":"","ref":"PaperTrail.Version.html#t:t/0","title":"PaperTrail.Version.t/0","type":"type"},{"doc":"","ref":"PaperTrail.VersionQueries.html","title":"PaperTrail.VersionQueries","type":"module"},{"doc":"Gets the current model record/struct of a version","ref":"PaperTrail.VersionQueries.html#get_current_model/2","title":"PaperTrail.VersionQueries.get_current_model/2","type":"function"},{"doc":"Gets the last version of a record.","ref":"PaperTrail.VersionQueries.html#get_version/1","title":"PaperTrail.VersionQueries.get_version/1","type":"function"},{"doc":"Gets the last version of a record.\n\nA list of options is optional, so you can set for example the :prefix of the query,\nwich allows you to change between different tenants.\n\n# Usage example:\n\n  iex(1)> PaperTrail.VersionQueries.get_version(record, [prefix: \"tenant_id\"])","ref":"PaperTrail.VersionQueries.html#get_version/2","title":"PaperTrail.VersionQueries.get_version/2","type":"function"},{"doc":"Gets the last version of a record given its module reference and its id.\n\nA list of options is optional, so you can set for example the :prefix of the query,\nwich allows you to change between different tenants.\n\n# Usage example:\n\n  iex(1)> PaperTrail.VersionQueries.get_version(ModelName, id, [prefix: \"tenant_id\"])","ref":"PaperTrail.VersionQueries.html#get_version/3","title":"PaperTrail.VersionQueries.get_version/3","type":"function"},{"doc":"Gets all the versions of a record.","ref":"PaperTrail.VersionQueries.html#get_versions/1","title":"PaperTrail.VersionQueries.get_versions/1","type":"function"},{"doc":"Gets all the versions of a record.\n\nA list of options is optional, so you can set for example the :prefix of the query,\nwich allows you to change between different tenants.\n\n# Usage example:\n\n  iex(1)> PaperTrail.VersionQueries.get_versions(record, [prefix: \"tenant_id\"])","ref":"PaperTrail.VersionQueries.html#get_versions/2","title":"PaperTrail.VersionQueries.get_versions/2","type":"function"},{"doc":"Gets all the versions of a record given a module and its id.\n\nA list of options is optional, so you can set for example the :prefix of the query,\nwich allows you to change between different tenants.\n\n# Usage example:\n\n  iex(1)> PaperTrail.VersionQueries.get_versions(ModelName, id, [prefix: \"tenant_id\"])","ref":"PaperTrail.VersionQueries.html#get_versions/3","title":"PaperTrail.VersionQueries.get_versions/3","type":"function"}]}